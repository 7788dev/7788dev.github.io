[{"title":"本站同款启动页","url":"/2025/07/30/boke-qdy/","content":"\n#### 前言\n\n好久没更新了,其实早就想把这篇文章写完,一直拖\n\n#### 代码\n\ncss\n\n```css\n/* 防止开屏动画期间页面滚动和主内容闪烁 */\nbody.splash-active {\n    overflow: hidden;\n}\n\n/* \n * 当 JS 移除 body.splash-active 类后，主内容区会平滑淡入。\n * 请确保 '.index-container' 是您首页主内容区域的正确选择器。\n*/\nbody.splash-active .index-container {\n    opacity: 0;\n    transition: opacity 0.8s ease-in-out;\n}\n\n/* 开屏动画容器 */\n.splash-screen {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    width: 100vw;\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 9999;\n    background-color: #121212;\n    transition: background-color 1.5s cubic-bezier(0.7, 0, 0.3, 1);\n    /* 性能优化 */\n    will-change: background-color;\n    transform: translateZ(0); /* 启用硬件加速 */\n    backface-visibility: hidden;\n}\n\n/* 颜色反转时的状态 */\n.splash-screen.invert-colors {\n    background-color: #ffffff;\n}\n\n.logo-text {\n    /* 优化字体栈：优先使用系统字体，确保快速加载和国内可访问性 */\n    font-family: \"Times New Roman\", \"Songti SC\", \"SimSun\", \"serif\", \"STSong\", \"华文宋体\", \"宋体\", serif;\n    font-weight: 500;\n    display: flex;\n    align-items: center;\n    font-size: clamp(40px, 12vw, 110px);\n    transition: opacity 0.8s ease-out, transform 0.8s ease-out;\n    /* 添加字体渲染优化 */\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    text-rendering: optimizeLegibility;\n}\n\n/* Logo 退场状态 */\n.logo-text.hidden {\n    opacity: 0;\n    transform: translateY(-60px);\n}\n\n.logo-word {\n    display: flex;\n}\n\n.logo-word + .logo-word {\n    margin-left: clamp(15px, 4vw, 40px);\n}\n\n.char-container {\n    display: inline-block;\n    overflow: hidden;\n    vertical-align: bottom;\n}\n\n.logo-text span {\n    display: block;\n    transform: translateY(110%);\n    animation: reveal 1.2s cubic-bezier(0.23, 1, 0.32, 1) forwards;\n    color: #f0f0f0;\n    transition: color 1.5s cubic-bezier(0.7, 0, 0.3, 1);\n    /* 性能优化 */\n    will-change: transform, color;\n    transform: translateY(110%) translateZ(0); /* 硬件加速 */\n}\n\n/* 颜色反转时，字体颜色同步变化 */\n.splash-screen.invert-colors .logo-text span {\n    color: #1a1a1a;\n}\n\n@keyframes reveal {\n    to { transform: translateY(0); }\n}\n\n/* 为 \"Aoguxin Blog\" 11个字母编排延迟 */\n.logo-text .char1  { animation-delay: 0.2s; }\n.logo-text .char2  { animation-delay: 0.3s; }\n.logo-text .char3  { animation-delay: 0.4s; }\n.logo-text .char4  { animation-delay: 0.5s; }\n.logo-text .char5  { animation-delay: 0.6s; }\n.logo-text .char6  { animation-delay: 0.7s; }\n.logo-text .char7  { animation-delay: 0.8s; }\n.logo-text .char8  { animation-delay: 0.9s; }\n.logo-text .char9  { animation-delay: 1.0s; }\n.logo-text .char10 { animation-delay: 1.1s; }\n.logo-text .char11 { animation-delay: 1.2s; }\n\n\n/* 移动设备优化 - 简化动画以提升性能 */\n@media (max-width: 768px) {\n    .logo-text {\n        font-size: clamp(32px, 10vw, 80px);\n    }\n\n    /* 在小屏幕设备上减少动画复杂度 */\n    .logo-text span {\n        animation-duration: 1.0s;\n    }\n}\n\n/* 低性能设备优化 - 减少动画效果 */\n@media (prefers-reduced-motion: reduce) {\n    .logo-text span {\n        animation: none;\n        transform: translateY(0);\n    }\n\n    .splash-screen {\n        transition: none;\n    }\n\n    .logo-text {\n        transition: none;\n    }\n}\n```\n\n接下来就是javascript\n\n```javascript\n/**\n * 开屏动画控制脚本\n * 功能：\n * 1. 只在首页显示\n * 2. 使用sessionStorage确保同一会话中只显示一次\n * 3. 优化渲染时序，防止主内容闪烁\n * 4. 优化性能检测，兼容移动设备\n */\n\n(function() {\n    'use strict';\n\n    // 性能优化：如果设备性能较差，跳过动画\n    function isLowPerformanceDevice() {\n        // 检查设备内存（如果可用）\n        if (navigator.deviceMemory && navigator.deviceMemory < 2) {\n            console.log('跳过开屏动画：检测到低性能设备');\n            return true;\n        }\n\n        // 检查连接速度（如果可用）\n        if (navigator.connection && navigator.connection.effectiveType) {\n            const slowConnections = ['slow-2g', '2g'];\n            if (slowConnections.includes(navigator.connection.effectiveType)) {\n                console.log('跳过开屏动画：检测到慢速网络');\n                return true;\n            }\n        }\n        \n        // [已修复] 不再将所有移动设备都视为低性能设备\n        return false;\n    }\n    \n    // 检查是否为首页\n    function isHomePage() {\n        const path = window.location.pathname;\n        // 兼容 Hexo 等博客框架的根路径配置\n        const root = window.hexo_root || '/';\n        return path === root || path === root + 'index.html' || path === root + '';\n    }\n    \n    // 检查是否已经显示过开屏动画\n    function hasShownSplash() {\n        return sessionStorage.getItem('splash_shown') === 'true';\n    }\n    \n    // 标记开屏动画已显示\n    function markSplashShown() {\n        sessionStorage.setItem('splash_shown', 'true');\n    }\n    \n    // 创建开屏动画HTML结构\n    function createSplashHTML() {\n        return `\n            <div class=\"splash-screen\" id=\"splashScreen\">\n                <div class=\"logo-text\" id=\"logoText\">\n                    <!-- 第一个单词 -->\n                    <div class=\"logo-word\">\n                        <div class=\"char-container\"><span class=\"char1\">A</span></div>\n                        <div class=\"char-container\"><span class=\"char2\">o</span></div>\n                        <div class=\"char-container\"><span class=\"char3\">g</span></div>\n                        <div class=\"char-container\"><span class=\"char4\">u</span></div>\n                        <div class=\"char-container\"><span class=\"char5\">x</span></div>\n                        <div class=\"char-container\"><span class=\"char6\">i</span></div>\n                        <div class=\"char-container\"><span class=\"char7\">n</span></div>\n                    </div>\n                    <!-- 第二个单词 -->\n                    <div class=\"logo-word\">\n                        <div class=\"char-container\"><span class=\"char8\">B</span></div>\n                        <div class=\"char-container\"><span class=\"char9\">l</span></div>\n                        <div class=\"char-container\"><span class=\"char10\">o</span></div>\n                        <div class=\"char-container\"><span class=\"char11\">g</span></div>\n                    </div>\n                </div>\n            </div>\n        `;\n    }\n    \n\n\nfunction initSplashScreen() {\n    try {\n        const body = document.body;\n\n        // 如果不满足显示动画的条件，立即移除 'splash-active' 类，让内容显示出来\n        if (!isHomePage() || hasShownSplash() || isLowPerformanceDevice()) {\n            if (hasShownSplash() || isLowPerformanceDevice()) {\n                 markSplashShown(); // 标记已显示，避免重复检查\n            }\n            body.classList.remove('splash-active'); // 移除类，让主内容可见\n            return;\n        }\n    \n        // 如果满足条件，则继续执行动画\n        markSplashShown();\n        \n        // 创建并插入开屏动画\n        const splashHTML = createSplashHTML();\n        body.insertAdjacentHTML('afterbegin', splashHTML);\n        \n        // 开始动画时间线\n        startAnimationTimeline();\n    } catch (error) {\n        // 错误处理：如果初始化失败，确保移除控制类，让页面恢复正常\n        console.error('开屏动画初始化失败:', error);\n        const splashScreen = document.getElementById('splashScreen');\n        if (splashScreen) {\n            splashScreen.remove();\n        }\n        document.body.classList.remove('splash-active');\n        markSplashShown(); // 标记已显示，避免无限重试\n    }\n}\n    \n    // 动画时间线控制\n    function startAnimationTimeline() {\n        try {\n            const splashScreen = document.getElementById('splashScreen');\n            const logoText = document.getElementById('logoText');\n\n            if (!splashScreen || !logoText) {\n                console.warn('开屏动画元素未找到，提前结束。');\n                document.body.classList.remove('splash-active'); // 确保恢复页面\n                return;\n            }\n        \n            // 时间线配置\n            const inversionStartTime = 2800; // 动画呈现后，开始颜色反转\n            const logoFadeOutTime = inversionStartTime + 1500; // 颜色反转结束后，Logo开始退场\n            const finalCleanupTime = logoFadeOutTime + 1000; // Logo退场后，清理DOM\n            \n            // 步骤1: 触发颜色反转\n            setTimeout(() => {\n                splashScreen.classList.add('invert-colors');\n            }, inversionStartTime);\n            \n            // 步骤2: 触发Logo退场\n            setTimeout(() => {\n                logoText.classList.add('hidden');\n            }, logoFadeOutTime);\n        \n            // 步骤3: 彻底移除开屏页，并移除 body 的控制类，让主内容平滑显示\n            setTimeout(() => {\n                if (splashScreen) {\n                    splashScreen.remove();\n                }\n                document.body.classList.remove('splash-active');\n            }, finalCleanupTime);\n        } catch (error) {\n            // 动画执行过程中的错误处理\n            console.error('开屏动画执行失败:', error);\n            const splashScreen = document.getElementById('splashScreen');\n            if (splashScreen) {\n                splashScreen.remove();\n            }\n            document.body.classList.remove('splash-active'); // 确保恢复页面\n        }\n    }\n    \n    // 尽早执行初始化，避免内容闪现\n    if (document.readyState === 'loading') {\n        document.addEventListener('readystatechange', function() {\n            if (document.readyState === 'interactive') {\n                initSplashScreen();\n            }\n        });\n    } else {\n        initSplashScreen();\n    }\n    \n})();\n```\n\n关键特性：同一会话只会展示一次,关闭浏览器打开重新展示\n#### 安装步骤\n\n1. **创建CSS文件**\n   在主题的`source/css/`目录下创建`splash-screen.css`文件，复制上面的CSS代码\n\n2. **创建JS文件**  \n   在主题的`source/js/`目录下创建`splash-screen.js`文件，复制上面的JS代码\n\n3. **引入资源文件**\n   在主题的`layout/_partial/head.ejs`中添加以下代码：\n\n```html\n<!-- 开屏动画CSS -->\n<link rel=\"stylesheet\" href=\"<%- url_for('/css/splash-screen.css') %>\">\n\n<!-- 开屏动画JS -->\n<script defer src=\"<%- url_for('/js/splash-screen.js') %>\"></script>\n```\n\n4. **确保首页容器正确**\n   确保你的首页主内容区域使用了`.index-container`类名，或者修改CSS中的选择器以匹配你的主题结构\n\n5. **在首页body 添加splash-active类名**\n\n   ```html\n   <body class=\"splash-active\">\n   \n   // 此处为首页主内容区域\n   \n   </body>\n   ```\n\n   原本这里是根据动态js添加类名的 但是会出现**(FOUC)** 问题。\n\n#### 自定义修改\n\n1. **修改文字内容**：\n   在`splash-screen.js`中找到`createSplashHTML()`函数，修改其中的字母和数量\n\n2. **调整动画时间**：\n   - CSS中修改`animation-delay`属性调整字母出现时间\n   - JS中修改`inversionStartTime`等变量调整动画阶段时间\n\n3. **更改颜色方案**：\n   修改CSS中的`background-color`和文字颜色\n\n4. **调整字体**：\n   修改`.logo-text`中的`font-family`属性\n","tags":["部署博客"]},{"title":"为什么时常感觉好累","url":"/2025/07/23/xl-lei/","content":"\n#### 前言\n\n明明没体力劳动，却像跑了马拉松；想学习提升，身体却钉在沙发上。这种“心理性疲惫”并非懒惰，实际上这种现象在近年愈发频繁。即使睡足了觉，醒来依然觉得沉重无力。这种累，不是身体肌肉的酸痛，而是真正反映当前社会压力之大的表现。\n\n#### 解释\n\n为什么会出现这种情况呢？快节奏成为目前社会的常态，信息洪流持续冲刷，多线程任务成为日常，无形的压力与内心的拉扯，悄无声息地透支着我们的精神能量。\n\n这种状态在心理学上被称为“[认知负荷](https://zh.wikipedia.org/wiki/%E8%AE%A4%E7%9F%A5%E8%B4%9F%E8%8D%B7)”（Cognitive Load）。诺贝尔奖得主[丹尼尔·卡尼曼](https://zh.wikipedia.org/wiki/%E4%B8%B9%E5%B0%BC%E5%B0%94%C2%B7%E5%8D%A1%E5%86%85%E6%9B%BC)（Daniel Kahneman）在其著作《[思考，快与慢](https://zh.wikipedia.org/wiki/%E6%80%9D%E8%80%83%EF%BC%8C%E5%BF%AB%E8%88%87%E6%85%A2)》中系统阐述了背后的关键机制：我们每天进行的每个决策、处理的每条信息都在消耗有限的认知资源。就像手机后台运行的程序，那些未完成的任务、悬而未决的人际关系、社交媒体上的比较心理，都在持续占用着我们的“心理内存”。\n\n不仅如此，神经科学的研究也为这种疲惫感提供了生理学上的解释。大脑的“[默认模式网络](https://baike.baidu.com/item/%E9%BB%98%E8%AE%A4%E6%A8%A1%E5%BC%8F%E7%BD%91%E7%BB%9C/24185984)”（Default Mode Network, DMN）在休息时仍保持活跃，消耗全身大量能量。当DMN因反复思虑负面事件或担忧未来（在心理学上称为“[反刍式思维](https://baike.baidu.com/item/%E5%8F%8D%E5%88%8D%E5%BC%8F%E6%80%9D%E8%80%83/22185592?fromtitle=%E5%8F%8D%E5%88%8D%E6%80%9D%E7%BB%B4&fromid=23700962)”）而过度活跃时，便会产生“精神内耗”。研究显示，在这种状态下，负责[情绪调节](https://zh.wikipedia.org/wiki/%E6%83%85%E7%B7%92%E8%AA%BF%E7%AF%80)的前额叶皮层与杏仁核之间的连接会出现功能异常，导致我们既无法有效思考，又持续处于低强度应激状态。\n\n而短视频的出现更像是双刃剑，加剧了这一过程：15秒的即时满足不断拉高“[多巴胺](https://zh.wikipedia.org/wiki/%E5%A4%9A%E5%B7%B4%E8%83%BA)”的奖赏阈值，碎片化信息却让深度思考变得困难。有研究指出，过度使用社交媒体可能影响大脑的奖励系统，其模式类似于[成瘾行为](https://zh.wikipedia.org/wiki/%E6%88%90%E7%98%BE%E8%A1%8C%E4%B8%BA)。\n\n#### 调整\n\n认识到问题是改变的第一步，以下策略有助于我们摆脱心理疲劳，恢复精神能量：\n\n有意识地减少对短视频、社交媒体等高刺激性内容的依赖。这类似于进行一种“[多巴胺排毒](https://baike.baidu.com/item/%E5%A4%9A%E5%B7%B4%E8%83%BA%E6%8E%92%E6%AF%92/65680831)”（Dopamine Detox/Fasting），其核心是减少对即时奖励的过度追求。尝试进行一些“低多巴胺”活动，如园艺、烹饪、与朋友进行深度对话等。这有助于重新平衡大脑的奖励系统，让我们从更真实、持久的活动中获得快乐。\n\n规律性的[体育锻炼](https://zh.wikipedia.org/wiki/%E9%AB%94%E8%82%B2%E9%81%8B%E5%8B%95)和[正念](https://zh.wikipedia.org/wiki/%E6%AD%A3%E5%BF%B5)练习被证实能有效调节前额叶皮层与杏仁核的活动，降低压力水平。结合正念呼吸练习，可以帮助我们将注意力带回当下，切断对过去和未来的过度担忧。\n\n通过这些刻意练习，我们可以逐步调整好自己的状态。\n\n#### 结语\n\n正如心理学家[米哈里·契克森米哈赖](https://baike.baidu.com/item/%E7%B1%B3%E5%93%88%E9%87%8C%C2%B7%E5%A5%91%E5%85%8B%E6%A3%AE%E7%B1%B3%E5%93%88%E8%B5%96/58968091)（Mihaly Csikszentmihalyi）在其“[心流](https://zh.wikipedia.org/wiki/%E5%BF%83%E6%B5%81)”理论中所言：“现代人不是在用脑过度，而是在错误的地方耗尽了心智资源。”保留一部分“认知冗余”，才是应对心理疲劳的关键缓冲带。\n\n---\n\n#### 参考资料\n1.  [认知负荷](https://zh.wikipedia.org/wiki/%E8%AE%A4%E7%9F%A5%E8%B4%9F%E8%8D%B7) - 维基百科\n2.  [丹尼尔·卡尼曼](https://zh.wikipedia.org/wiki/%E4%B8%B9%E5%B0%BC%E5%B0%94%C2%B7%E5%8D%A1%E5%86%85%E6%9B%BC) - 维基百科\n3.  [思考，快与慢](https://zh.wikipedia.org/wiki/%E6%80%9D%E8%80%83%EF%BC%8C%E5%BF%AB%E8%88%87%E6%85%A2) - 维基百科\n4.  [默认模式网络](https://baike.baidu.com/item/%E9%BB%98%E8%AE%A4%E6%A8%A1%E5%BC%8F%E7%BD%91%E7%BB%9C/24185984) - 百度百科\n5.  [反刍思维](\nhttps://baike.baidu.com/item/%E5%8F%8D%E5%88%8D%E5%BC%8F%E6%80%9D%E8%80%83/22185592?fromtitle=%E5%8F%8D%E5%88%8D%E6%80%9D%E7%BB%B4&fromid=23700962) - 百度百科\n6.  [情绪调节](https://zh.wikipedia.org/wiki/%E6%83%85%E7%B7%92%E8%AA%BF%E7%AF%80) - 维基百科\n7.  [多巴胺](https://zh.wikipedia.org/wiki/%E5%A4%9A%E5%B7%B4%E8%83%BA) - 维基百科\n8.  [成瘾行为](https://zh.wikipedia.org/wiki/%E6%88%90%E7%98%BE%E8%A1%8C%E4%B8%BA) - 维基百科\n9.  [多巴胺排毒](https://baike.baidu.com/item/%E5%A4%9A%E5%B7%B4%E8%83%BA%E6%8E%92%E6%AF%92/65680831) - 百度百科\n10. [体育运动](https://zh.wikipedia.org/wiki/%E9%AB%94%E8%82%B2%E9%81%8B%E5%8B%95) - 维基百科\n11. [正念](https://zh.wikipedia.org/wiki/%E6%AD%A3%E5%BF%B5) - 维基百科\n12. [米哈里·契克森米哈赖](https://baike.baidu.com/item/%E7%B1%B3%E5%93%88%E9%87%8C%C2%B7%E5%A5%91%E5%85%8B%E6%A3%AE%E7%B1%B3%E5%93%88%E8%B5%96/58968091) - 百度百科\n13. [心流](https://zh.wikipedia.org/wiki/%E5%BF%83%E6%B5%81) - 维基百科","tags":["心理学"]},{"title":"《可不可以》：一首歌里的青春遗憾","url":"/2025/07/22/would-you/","content":"\n### 音乐欣赏\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=300 height=52 src=\"//music.163.com/outchain/player?type=2&id=2008579192&auto=1&height=32\"></iframe>\n\n### 音乐背景\n\n2018年的初夏，一首名为《可不可以》的歌曲悄然上线。谁也没想到，这首制作并不算精良的demo级作品，会成为当年最动人的情感爆款。\n\n这首歌讲述了一个令人心碎的爱情故事。男孩和女孩相恋三年，约定要一直在一起。但男孩中途放弃，分手后才意识到自己的错误，想要挽回这段感情。歌曲中反复出现的\"可不可以\"既是对过去的忏悔，也是对未来的期盼。\n\n词曲作者刘伟锋在采访中透露，这首歌的灵感来源于朋友的真实故事。那个总说\"再等等\"的男孩，最终等来了女孩的婚礼请柬。\"可不可以\"四个字，是无数个深夜辗转反侧时，最想说却没能说出口的挽留。录音棚版本只用了三天就完成制作。张紫豪略带沙哑的嗓音状态，正是通宵录制后的真实呈现。制作人原本想让他重新录制，却意外发现这种疲惫感与歌曲主题完美契合。\n\n> \"我们都在歌里听到了自己的故事\" —— 网易云音乐热评TOP1\n\n### 结语\n\n在这个速食爱情的时代，或许正因为遗憾太常见，这首朴素的歌才显得如此珍贵。它不教你如何恋爱，只是安静地提醒：有些话，要及时说。\n\n","tags":["音乐"]},{"title":"搭建本站同款博客","url":"/2025/07/22/blog/","content":"\n### 前言\n\n本站使用工具及模版如下：\n\n- [Hexo](https://hexo.io/)  \n- [Netlify](https://www.netlify.com/)  \n- [GitHub](https://github.com/)  \n- [AirCloud 主题](https://github.com/aircloud/hexo-theme-aircloud)  \n\n### Hexo+Github+Netlify部署个人博客\n\nhttps://juejin.cn/post/6844903830568583176\n\n### 更换模版\n\n根据https://github.com/aircloud/hexo-theme-aircloud 文档教程来\n\n或者也可以看我的Github仓库参考配置\n\nhttps://github.com/7788dev/blog\n\n\nAirCloud 移动端giscus评论组件会存在组件偏移问题\n还有一些性能优化问题 大家可以自己处理\n也可以参考我的仓库代码优化\n\n\n### 结语\n\n以上仅适合有基础的人群操作,如有不懂的可以bing或留言\n\nNetlify可能会影响Seo","tags":["部署博客"]},{"title":"新的博客","url":"/2025/07/22/hello-world/","content":"\n## 前言\n\n我之前也做过许多博客,可每次都聊聊而知,很快就成为了404\n所以这次我...可能会维护下去\n\n\n欢迎大家来到我的文字世界","tags":["部署博客"]}]